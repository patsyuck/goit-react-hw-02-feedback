{"version":3,"sources":["components/Feedback.js","components/Statistics.js","components/Notification.js","components/Section.js","components/App.js","index.js"],"names":["FeedbackOptions","options","onLeaveFeedback","map","option","class","name","onClick","Statistics","good","neutral","bad","total","positivePercentage","Math","round","Notification","message","Panel","title","children","App","state","incrementFeedback","e","setState","target","countTotalFeedback","countPositiveFeedbackPercentage","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uTAwBeA,EAZS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OACE,8BACGD,EAAQE,KAAI,SAAAC,GAAM,OACjB,wBAAQC,MAAM,SAASC,KAAMF,EAAQG,QAASL,EAA9C,SACGE,UCLII,EAZI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,gCACE,uCAAUJ,KACV,0CAAaC,KACb,sCAASC,KACT,wCAAWC,KACX,oDAAuBE,KAAKC,MAAMF,GAAlC,WCHSG,EAJM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,8BAAMA,KCMAC,EAPD,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACZ,oCACE,6BAAKD,IACJC,MCIQC,EAAb,4MACEC,MAAQ,CACNb,KAAM,EACNC,QAAS,EACTC,IAAK,GAJT,EAWEY,kBAAoB,SAAAC,GAClB,EAAKC,SAAL,eAAiBD,EAAEE,OAAOpB,KAAO,EAAKgB,MAAME,EAAEE,OAAOpB,MAAQ,KAZjE,EAeEqB,mBAAqB,WACnB,OAAO,EAAKL,MAAMb,KAAO,EAAKa,MAAMZ,QAAU,EAAKY,MAAMX,KAhB7D,EAmBEiB,gCAAkC,WAChC,OAAQ,IAAM,EAAKN,MAAMb,KAAQ,EAAKkB,sBApB1C,4CAuBE,WACE,MAA+BE,KAAKP,MAA5Bb,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IAEvB,OACE,eAAC,WAAD,WACE,cAAC,EAAD,CAAOQ,MAAM,wBAAb,SACE,cAAC,EAAD,CAEElB,QANI,CAAC,OAAQ,UAAW,OAOxBC,gBAAiB2B,KAAKN,sBAG1B,cAAC,EAAD,CAAOJ,MAAM,aAAb,SACGU,KAAKF,qBAAuB,EAC3B,cAAC,EAAD,CACElB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOiB,KAAKF,qBACZd,mBAAoBgB,KAAKD,oCAG3B,cAAC,EAAD,CAAcX,QAAQ,+BA7ClC,GAAyBa,aCFzBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.42031459.chunk.js","sourcesContent":["import './Feedback.css';\n\n/*const FeedbackOptions = ({ options, onLeaveFeedback }) => {\n  return (\n    <div>\n      <button onClick={onLeaveFeedback('good')}>Good</button>\n      <button onClick={onLeaveFeedback('neutral')}>Neutral</button>\n      <button onClick={onLeaveFeedback('bad')}>Bad</button>\n    </div>\n  );\n};*/\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\n  return (\n    <div>\n      {options.map(option => (\n        <button class=\"button\" name={option} onClick={onLeaveFeedback}>\n          {option}\n        </button>\n      ))}\n    </div>\n  );\n};\n\nexport default FeedbackOptions;\n","const Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\n  return (\n    <div>\n      <p>Good: {good}</p>\n      <p>Neutral: {neutral}</p>\n      <p>Bad: {bad}</p>\n      <p>Total: {total}</p>\n      <p>Positive feedback: {Math.round(positivePercentage)}%</p>\n    </div>\n  );\n};\n\nexport default Statistics;\n","const Notification = ({ message }) => {\n  return <div>{message}</div>;\n};\n\nexport default Notification;\n","const Panel = ({ title, children }) => (\n  <section>\n    <h2>{title}</h2>\n    {children}\n  </section>\n);\n\nexport default Panel;\n","import React, { Component, Fragment } from 'react';\nimport './App.css';\nimport FeedbackOptions from './Feedback';\nimport Statistics from './Statistics';\nimport Notification from './Notification';\nimport Panel from './Section';\n\nexport class App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  /*incrementFeedback = feedback => () => {\n    this.setState({ [feedback]: this.state[feedback] + 1 });\n  };*/\n\n  incrementFeedback = e => {\n    this.setState({ [e.target.name]: this.state[e.target.name] + 1 });\n  };\n\n  countTotalFeedback = () => {\n    return this.state.good + this.state.neutral + this.state.bad;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    return (100 * this.state.good) / this.countTotalFeedback();\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const opt = ['good', 'neutral', 'bad'];\n    return (\n      <Fragment>\n        <Panel title=\"Please leave feedback\">\n          <FeedbackOptions\n            /*options={this.state}*/\n            options={opt}\n            onLeaveFeedback={this.incrementFeedback}\n          />\n        </Panel>\n        <Panel title=\"Statistics\">\n          {this.countTotalFeedback() > 0 ? (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={this.countTotalFeedback()}\n              positivePercentage={this.countPositiveFeedbackPercentage()}\n            />\n          ) : (\n            <Notification message=\"No feedback given\" />\n          )}\n        </Panel>\n      </Fragment>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}